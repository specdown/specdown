"on":
  push:
    tags:
      - "*"
jobs:
  build:
    runs-on: "${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v2
        with:
          key: "${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}"
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions-rs/cargo@v1
        with:
          args: "--release --locked"
          command: build
      - id: get_repository_name
        run: 'echo ::set-output name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / ''{print $2}'' | sed -e "s/:refs//")'
        shell: bash
      - uses: actions/upload-artifact@v2
        with:
          name: specdown-${{ matrix.target }}
          path: ./target/release/specdown${{ matrix.suffix }}

    strategy:
      matrix:
        include:
          - os: macos-latest
            suffix: ""
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            suffix: ""
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            suffix: ".exe"
            target: x86_64-pc-windows-msvc
  release:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v2
        with:
          key: "${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}"
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
      - uses: actions/download-artifact@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions-rs/cargo@v1
        with:
          args: toml-cli
          command: install
      - id: get_repository_name
        run: 'echo ::set-output name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / ''{print $2}'' | sed -e "s/:refs//")'
        shell: bash
      - id: get_version
        run: "echo ::set-output name=VERSION::v$(toml get Cargo.toml package.version | tail -c +2 | head -c -2)"
        shell: bash
      - env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        id: create_release
        uses: actions/create-release@v1.1.0
        with:
          draft: false
          prerelease: false
          release_name: "Release ${{ steps.get_version.outputs.VERSION }}"
          tag_name: "${{ steps.get_version.outputs.VERSION }}"
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ steps.create_release.outputs.upload_url }}"
          asset_path: ./specdown-x86_64-unknown-linux-gnu/specdown
          asset_name: specdown-x86_64-unknown-linux-gnu
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ steps.create_release.outputs.upload_url }}"
          asset_path: ./specdown-x86_64-apple-darwin/specdown
          asset_name: specdown-x86_64-apple-darwin
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ steps.create_release.outputs.upload_url }}"
          asset_path: ./specdown-x86_64-pc-windows-msvc/specdown.exe
          asset_name: specdown-x86_64-pc-windows-msvc
          asset_content_type: application/octet-stream

  publish_website:
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout specdown
        uses: actions/checkout@v2
        with:
          repository: specdown/specdown
          path: specdown
      - name: Checkout gh-pages
        uses: actions/checkout@v2
        with:
          repository: specdown/specdown
          ref: gh-pages
          path: gh-pages
          persist-credentials: false
          fetch-depth: 0
      - name: Configure git for gh-pages
        shell: bash
        run: |
          cd gh-pages
          git config user.name "GitHub"
          git config user.email "noreply@github.com"
      - name: Install the latest specdown
        shell: bash
        run: |
          mkdir gh-pages/.bin
          curl -L https://github.com/specdown/specdown/releases/latest/download/specdown-x86_64-unknown-linux-gnu --output gh-pages/.bin/specdown
          chmod +x gh-pages/.bin/specdown
          echo "$PWD/gh-pages/.bin" >> $GITHUB_PATH
      - name: Copy docs to gh-pages
        shell: bash
        run: |
          mkdir -p gh-pages/docs
          rm -rf gh-pages/*.md gh-pages/docs/*

          for doc in $(find specdown/docs -name '*.md'); do
            output=$(echo "$doc" | sed 's!^specdown/docs/!gh-pages/docs/!')
            dir=$(dirname "$output")
            mkdir -p "$dir"
            cat >"$output" <<HEADER
          ---
          layout: page
          ---
          HEADER
            specdown strip "$doc" >>"$output"
          done

          cat >gh-pages/index.md <<HEADER
          ---
          layout: page
          ---
          HEADER
          specdown strip specdown/README.md >>gh-pages/index.md

      - name: Commit changes to gh-pages
        shell: bash
        run: |
          cd gh-pages
          git add index.md docs
          git commit -m "Update website" || true
      - name: Push changes to gh-pages
        uses: ad-m/github-push-action@master
        with:
          directory: gh-pages
          branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}

#  tag-docker-repo:
#    needs:
#      - release
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          repository: specdown/specdown-docker-image
#          token: "${{ secrets.RELEASE_COMMIT_TOKEN }}"
#          path: docker
#      - uses: actions/checkout@v2
#        with:
#          repository: specdown/specdown
#          path: specdown
#      - run: "echo ::set-output name=VERSION::v$(toml get specdown/Cargo.toml package.version | tail -c +2 | head -c -2)"
#        id: get_version
#        shell: bash
#      - shell: bash
#        run: |
#          cd docker
#          git config user.name "GitHub"
#          git config user.email "noreply@github.com"
#          git tag -a -m "${{ steps.get_version.outputs.VERSION }}" "${{ steps.get_version.outputs.VERSION }}"
#          git push --tags
