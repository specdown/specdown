"on":
  push:
    tags:
      - "*"
jobs:
  build:
    runs-on: "${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v2
        with:
          key: "${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}"
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions-rs/cargo@v1
        with:
          args: "--release --locked"
          command: build
      - id: get_repository_name
        run: 'echo ::set-output name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / ''{print $2}'' | sed -e "s/:refs//")'
        shell: bash
      - uses: actions/upload-artifact@v2
        with:
          name: specdown-${{ matrix.target }}
          path: ./target/release/specdown${{ matrix.suffix }}

    strategy:
      matrix:
        include:
          - os: macos-latest
            suffix: ""
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            suffix: ""
            target: x86_64-unknown-linux-gnu
  release:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v2
        with:
          key: "${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}"
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
      - uses: actions/download-artifact@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions-rs/cargo@v1
        with:
          args: toml-cli
          command: install
      - id: get_repository_name
        run: 'echo ::set-output name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / ''{print $2}'' | sed -e "s/:refs//")'
        shell: bash
      - id: get_version
        run: "echo ::set-output name=VERSION::v$(toml get Cargo.toml package.version | tail -c +2 | head -c -2)"
        shell: bash
      - env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        id: create_release
        uses: actions/create-release@v1.1.0
        with:
          draft: false
          prerelease: false
          release_name: "Release ${{ steps.get_version.outputs.VERSION }}"
          tag_name: "${{ steps.get_version.outputs.VERSION }}"
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ steps.create_release.outputs.upload_url }}"
          asset_path: ./specdown-x86_64-unknown-linux-gnu/specdown
          asset_name: specdown-x86_64-unknown-linux-gnu
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ steps.create_release.outputs.upload_url }}"
          asset_path: ./specdown-x86_64-apple-darwin/specdown
          asset_name: specdown-x86_64-apple-darwin
          asset_content_type: application/octet-stream

  publish_website:
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: specdown/specdown
          path: specdown
      - uses: actions/checkout@v2
        with:
          repository: specdown/specdown
          token: "${{ secrets.RELEASE_COMMIT_TOKEN }}"
          branch: gh-pages
          path: gh-pages
      - shell: bash
        run: |
          mkdir -p gh-pages/_pages
          rm -rf gh-pages/*.md gh-pages/_pages/*
          cp -a docs/* gh-pages/_pages
          cat >gh-pages/index.md <<HEADER
          ---
          layout: page
          ---
          HEADER
          cat README.md >>gh-pages/index.md
      - shell: bash
        run: |
          cd gh-pages
          git config user.name "GitHub"
          git config user.email "noreply@github.com"
          git add .
          git commit -m "Update website"
          git push

#  tag-docker-repo:
#    needs:
#      - release
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          repository: specdown/specdown-docker-image
#          token: "${{ secrets.RELEASE_COMMIT_TOKEN }}"
#          path: docker
#      - uses: actions/checkout@v2
#        with:
#          repository: specdown/specdown
#          path: specdown
#      - run: "echo ::set-output name=VERSION::v$(toml get specdown/Cargo.toml package.version | tail -c +2 | head -c -2)"
#        id: get_version
#        shell: bash
#      - shell: bash
#        run: |
#          cd docker
#          git config user.name "GitHub"
#          git config user.email "noreply@github.com"
#          git tag -a -m "${{ steps.get_version.outputs.VERSION }}" "${{ steps.get_version.outputs.VERSION }}"
#          git push --tags
